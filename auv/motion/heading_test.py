from . import robot_control




if __name__ == "__main__":
    rc = robot_control.RobotControl()
    rc.get_callback_compass()
    heading = int(input("Set heading:"))
    rc.set_heading(heading)
    heading = int(input("Set heading:"))
    rc.set_heading(heading)
    heading = int(input("Set heading:"))
    rc.set_heading(heading)
    heading = int(input("Set heading (old):"))
    rc.setHeadingOld(heading)
    heading = int(input("Set heading (old):"))
    rc.setHeadingOld(heading)
    heading = int(input("Set heading (old):"))
    rc.setHeadingOld(heading)
    power = input("Set power of forward heading")
    time = input("Set time in seconds:")
    rc.forwardHeading(power, time)
    power = input("Set power of forward heading")
    time = input("Set time in seconds:")
    rc.forwardHeading(power, time)
    power = input("Set power of forward heading")
    time = input("Set time in seconds:")
    rc.forwardHeading(power, time)
    power = input("Set power of lateral")
    time = input("Set time in seconds:")
    rc.lateralUni(power, time)
    power = input("Set power of lateral")
    time = input("Set time in seconds:")
    rc.lateralUni(power, time)
    power = input("Set power of lateral")
    time = input("Set time in seconds:")
    rc.lateralUni(power, time)
    power = input("Set power of forward")
    time = input("Set time in seconds:")
    rc.forwardUni(power, time)
    power = input("Set power of forward")
    time = input("Set time in seconds:")
    rc.forwardUni(power, time)
    power = input("Set power of forward")
    time = input("Set time in seconds:")
    rc.forwardUni(power, time)
    dist = input("Set forward movement distance:")
    power = input("Set power of movement: ")
    rc.forwardDist(dist, power)
    dist = input("Set forward movement distance:")
    power = input("Set power of movement: ")
    rc.forwardDist(dist, power)
    dist = input("Set forward movement distance:")
    power = input("Set power of movement: ")
    rc.forwardDist(dist, power)
    